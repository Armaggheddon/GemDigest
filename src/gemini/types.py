from enum import Enum
from typing import TypedDict
from dataclasses import dataclass
from pydantic import BaseModel, Field


class GeminiFinishReasonMessages(Enum):
    FINISH_REASON_UNSPECIFIED="Default value. This value is unused."
    STOP="Natural stop point of the model or provided stop sequence."
    MAX_TOKENS="The maximum number of tokens as specified in the request was reached."
    SAFETY="The response candidate content was flagged for safety reasons."
    RECITATION="The response candidate content was flagged for recitation reasons."
    LANGUAGE="The response candidate content was flagged for using an unsupported language."
    OTHER="Unknown reason."
    BLOCKLIST="Token generation stopped because the content contains forbidden terms."
    PROHIBITED_CONTENT="Token generation stopped for potentially containing prohibited content."
    SPII="Token generation stopped because the content potentially contains Sensitive Personally Identifiable Information (SPII)."
    MALFORMED_FUNCTION_CALL="The function call generated by the model is invalid."

    @staticmethod
    def value_from_name(name: int) -> str:
        return GeminiFinishReasonMessages[name].value

@dataclass
class GeminiTokenCount:
    last_input_token_count: int
    last_output_token_count: int
    total_input_token_count: int
    total_output_token_count: int


@dataclass
class GeminiOutputFormat:
    title: str
    summary: str
    image_url: str


class GeminiOutputFormatTemplate(TypedDict):
    title: str
    summary: str
    image_url: str